// Code generated by protoc-gen-go. DO NOT EDIT.
// source: v1/ping_pong.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PingRequest struct {
	Ping                 string   `protobuf:"bytes,1,opt,name=ping,proto3" json:"ping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0764852e9d3d2a10, []int{0}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetPing() string {
	if m != nil {
		return m.Ping
	}
	return ""
}

type PongResponse struct {
	Pong                 string   `protobuf:"bytes,1,opt,name=pong,proto3" json:"pong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PongResponse) Reset()         { *m = PongResponse{} }
func (m *PongResponse) String() string { return proto.CompactTextString(m) }
func (*PongResponse) ProtoMessage()    {}
func (*PongResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0764852e9d3d2a10, []int{1}
}

func (m *PongResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PongResponse.Unmarshal(m, b)
}
func (m *PongResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PongResponse.Marshal(b, m, deterministic)
}
func (m *PongResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PongResponse.Merge(m, src)
}
func (m *PongResponse) XXX_Size() int {
	return xxx_messageInfo_PongResponse.Size(m)
}
func (m *PongResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PongResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PongResponse proto.InternalMessageInfo

func (m *PongResponse) GetPong() string {
	if m != nil {
		return m.Pong
	}
	return ""
}

type FetchPingCountRequest struct {
	// API versioning: it is my best practice to specify version explicitly
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchPingCountRequest) Reset()         { *m = FetchPingCountRequest{} }
func (m *FetchPingCountRequest) String() string { return proto.CompactTextString(m) }
func (*FetchPingCountRequest) ProtoMessage()    {}
func (*FetchPingCountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0764852e9d3d2a10, []int{2}
}

func (m *FetchPingCountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchPingCountRequest.Unmarshal(m, b)
}
func (m *FetchPingCountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchPingCountRequest.Marshal(b, m, deterministic)
}
func (m *FetchPingCountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchPingCountRequest.Merge(m, src)
}
func (m *FetchPingCountRequest) XXX_Size() int {
	return xxx_messageInfo_FetchPingCountRequest.Size(m)
}
func (m *FetchPingCountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchPingCountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchPingCountRequest proto.InternalMessageInfo

func (m *FetchPingCountRequest) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

type FetchPingCountResponse struct {
	Api string `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	// Ping total count
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchPingCountResponse) Reset()         { *m = FetchPingCountResponse{} }
func (m *FetchPingCountResponse) String() string { return proto.CompactTextString(m) }
func (*FetchPingCountResponse) ProtoMessage()    {}
func (*FetchPingCountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0764852e9d3d2a10, []int{3}
}

func (m *FetchPingCountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchPingCountResponse.Unmarshal(m, b)
}
func (m *FetchPingCountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchPingCountResponse.Marshal(b, m, deterministic)
}
func (m *FetchPingCountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchPingCountResponse.Merge(m, src)
}
func (m *FetchPingCountResponse) XXX_Size() int {
	return xxx_messageInfo_FetchPingCountResponse.Size(m)
}
func (m *FetchPingCountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchPingCountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchPingCountResponse proto.InternalMessageInfo

func (m *FetchPingCountResponse) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *FetchPingCountResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "v1.PingRequest")
	proto.RegisterType((*PongResponse)(nil), "v1.PongResponse")
	proto.RegisterType((*FetchPingCountRequest)(nil), "v1.fetchPingCountRequest")
	proto.RegisterType((*FetchPingCountResponse)(nil), "v1.fetchPingCountResponse")
}

func init() { proto.RegisterFile("v1/ping_pong.proto", fileDescriptor_0764852e9d3d2a10) }

var fileDescriptor_0764852e9d3d2a10 = []byte{
	// 379 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0xe5, 0x64, 0x59, 0xd8, 0xd9, 0x15, 0xdb, 0xb5, 0x00, 0x2d, 0x11, 0x07, 0x93, 0x03,
	0x2a, 0x15, 0x49, 0x9a, 0xd2, 0x13, 0x5c, 0x80, 0xbe, 0x40, 0x15, 0x6e, 0x5c, 0x50, 0x48, 0x07,
	0xd7, 0xa8, 0xf2, 0x98, 0xd8, 0x49, 0x39, 0x73, 0xe6, 0x80, 0xe0, 0x86, 0x78, 0x2b, 0x5e, 0x81,
	0x07, 0x41, 0x76, 0x8a, 0x54, 0x68, 0x4f, 0x1e, 0x8f, 0x3f, 0xff, 0xfe, 0x7f, 0x0f, 0xf0, 0xbe,
	0x2c, 0x8c, 0xd2, 0xf2, 0xad, 0x21, 0x2d, 0x73, 0xd3, 0x92, 0x23, 0x1e, 0xf5, 0x65, 0xf2, 0x40,
	0x12, 0xc9, 0x0d, 0x16, 0xb5, 0x51, 0x45, 0xad, 0x35, 0xb9, 0xda, 0x29, 0xd2, 0x76, 0x20, 0x92,
	0x27, 0x61, 0x69, 0x32, 0x89, 0x3a, 0xb3, 0xdb, 0x5a, 0x4a, 0x6c, 0x0b, 0x32, 0x81, 0x38, 0xa4,
	0xd3, 0x87, 0x70, 0xbe, 0x54, 0x5a, 0x56, 0xf8, 0xb1, 0x43, 0xeb, 0x38, 0x87, 0x13, 0xff, 0xe2,
	0x35, 0x13, 0x6c, 0x7c, 0x56, 0x85, 0x3a, 0x4d, 0xe1, 0x62, 0x49, 0x1e, 0xb1, 0x86, 0xb4, 0xc5,
	0xc0, 0xd0, 0x1e, 0x43, 0x5a, 0xa6, 0x8f, 0xe1, 0xee, 0x7b, 0x74, 0xcd, 0xda, 0x6b, 0x2d, 0xa8,
	0xd3, 0xee, 0xaf, 0xe0, 0x08, 0xe2, 0xda, 0xa8, 0x1d, 0xeb, 0xcb, 0xf4, 0x05, 0xdc, 0xfb, 0x1f,
	0xdd, 0x09, 0x1f, 0xb0, 0xfc, 0x0e, 0xdc, 0x68, 0x3c, 0x72, 0x1d, 0x09, 0x36, 0x8e, 0xab, 0x61,
	0x33, 0xfb, 0xc9, 0xe0, 0xd2, 0xdf, 0xf6, 0xae, 0x5e, 0x63, 0xdb, 0xab, 0x06, 0x79, 0x06, 0xb7,
	0xcc, 0xae, 0xc5, 0x2f, 0xf3, 0xbe, 0xcc, 0xf7, 0x52, 0x25, 0xa3, 0xd0, 0xd8, 0xcf, 0xf0, 0x06,
	0x6e, 0xff, 0x6b, 0x82, 0xdf, 0xf7, 0xcc, 0xd1, 0x0c, 0x49, 0x72, 0xec, 0x68, 0x10, 0x4a, 0xaf,
	0x3e, 0xff, 0xfa, 0xfd, 0x3d, 0x3a, 0xe7, 0x67, 0x45, 0x5f, 0x16, 0xc1, 0xde, 0xab, 0xaf, 0xec,
	0xdb, 0xcb, 0x2f, 0x8c, 0x3f, 0x82, 0x2b, 0xef, 0x48, 0xf8, 0xff, 0x11, 0x76, 0xb0, 0x99, 0x5e,
	0x00, 0xb4, 0x58, 0x37, 0x2e, 0x93, 0xd5, 0x72, 0x31, 0x8b, 0xcb, 0x7c, 0x3a, 0x61, 0x6c, 0x36,
	0xaa, 0x8d, 0xd9, 0xa8, 0x26, 0x0c, 0xa6, 0xf8, 0x60, 0x49, 0x3f, 0x3b, 0xe8, 0x54, 0xcf, 0x21,
	0x9e, 0x4f, 0xe7, 0x7c, 0x0e, 0x93, 0x0a, 0x5d, 0xd7, 0x6a, 0x5c, 0x89, 0xed, 0x1a, 0xb5, 0x70,
	0x6b, 0x14, 0x2d, 0x5a, 0xea, 0xda, 0x06, 0xc5, 0x8a, 0xd0, 0x0a, 0x4d, 0x4e, 0xe0, 0x27, 0x65,
	0x5d, 0xce, 0x4f, 0xe1, 0xe4, 0x47, 0xc4, 0x6e, 0xbe, 0x3b, 0x0d, 0xc3, 0x7e, 0xfa, 0x27, 0x00,
	0x00, 0xff, 0xff, 0x79, 0xf4, 0x87, 0x06, 0x52, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PingPongServiceClient is the client API for PingPongService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PingPongServiceClient interface {
	PingPong(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error)
	FetchPingCount(ctx context.Context, in *FetchPingCountRequest, opts ...grpc.CallOption) (*FetchPingCountResponse, error)
}

type pingPongServiceClient struct {
	cc *grpc.ClientConn
}

func NewPingPongServiceClient(cc *grpc.ClientConn) PingPongServiceClient {
	return &pingPongServiceClient{cc}
}

func (c *pingPongServiceClient) PingPong(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongResponse, error) {
	out := new(PongResponse)
	err := c.cc.Invoke(ctx, "/v1.PingPongService/pingPong", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pingPongServiceClient) FetchPingCount(ctx context.Context, in *FetchPingCountRequest, opts ...grpc.CallOption) (*FetchPingCountResponse, error) {
	out := new(FetchPingCountResponse)
	err := c.cc.Invoke(ctx, "/v1.PingPongService/fetchPingCount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PingPongServiceServer is the server API for PingPongService service.
type PingPongServiceServer interface {
	PingPong(context.Context, *PingRequest) (*PongResponse, error)
	FetchPingCount(context.Context, *FetchPingCountRequest) (*FetchPingCountResponse, error)
}

func RegisterPingPongServiceServer(s *grpc.Server, srv PingPongServiceServer) {
	s.RegisterService(&_PingPongService_serviceDesc, srv)
}

func _PingPongService_PingPong_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingPongServiceServer).PingPong(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PingPongService/PingPong",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingPongServiceServer).PingPong(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PingPongService_FetchPingCount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchPingCountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PingPongServiceServer).FetchPingCount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PingPongService/FetchPingCount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PingPongServiceServer).FetchPingCount(ctx, req.(*FetchPingCountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PingPongService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PingPongService",
	HandlerType: (*PingPongServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "pingPong",
			Handler:    _PingPongService_PingPong_Handler,
		},
		{
			MethodName: "fetchPingCount",
			Handler:    _PingPongService_FetchPingCount_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/ping_pong.proto",
}
